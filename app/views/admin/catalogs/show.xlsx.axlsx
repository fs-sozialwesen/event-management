response.headers['Content-Disposition'] = %(attachment; filename="Bildungskalander-Export-#{@catalog.year}.xlsx")

wb = xlsx_package.workbook

wb.add_worksheet(name: "Seminare #{@catalog.year}") do |sheet|
  sheet.add_row ["Bildungskalender #{@catalog.year}"]
  sheet.add_row ['exportiert', l(Date.current)]

  sheet.add_style 'A1:A2', b: true

  sheet.add_row
  sheet.add_row

  seminar_attributes = %i(number title subtitle benefit content notes date_text)
  html_sanitize      = %i(benefit content notes date_text)
  header             = seminar_attributes.map { |attr| Seminar.human_attribute_name attr }
  last_col           = ('A'.ord + seminar_attributes.size - 1).chr

  sheet.add_row header
  sheet.add_style "A5:#{last_col}5", b: true
  sheet.add_border 'A5:C5'

  @catalog.seminars.includes(:categories).order(:number).each do |seminar|
    row = seminar_attributes.map do |attr|
      val            = seminar.send(attr)
      val            = strip_tags(val || '')&.gsub('<br>', "\n") if attr.in?(html_sanitize)
      val.to_s
    end
    sheet.add_row row
  end
  col_width = [20] * (seminar_attributes.size - 1)
  sheet.column_widths(12, *col_width)
end

def add_categories(sheet, categories, level: 0)
  categories.each do |category|
    row = Array.new(level) { '' }
    row << category.display_name << ''
    sheet.add_row row
    add_categories sheet, category.children.order(:number, :name), level: level + 1
  end
end

wb.add_worksheet(name: "Themen #{@catalog.year}") do |sheet|
  sheet.add_row ["Themen #{@catalog.year}"]
  sheet.add_style 'A1', b: true

  sheet.add_row

  add_categories sheet, @catalog.categories.roots.includes(children: {children: :children}).order(:number, :name)
  col_width = 6
  sheet.column_widths col_width, col_width, col_width, col_width, col_width, 200
end

cell_rotated_text_style = wb.styles.add_style(alignment: { textRotation: 90 })

wb.add_worksheet(name: 'Seminare => Themen') do |sheet|
  categories = @catalog.categories.order(:number, :name).all
  sheet.add_row ['', ''] + categories.map(&:display_name),
                style: [nil, nil] + Array.new(categories.size) { cell_rotated_text_style },
                height: 150
  # sheet.add_style 'A1', alignment: { textRotation: 90 }

  @catalog.seminars.includes(:categories).order(:number).each do |seminar|
    row = [seminar.number, seminar.title]
    sheet.add_row row + categories.map { |cat| cat.in?(seminar.categories) ? 'x' : '' }
  end

  # add_categories sheet, @catalog.categories.roots.order(:number, :name)
  # col_width = 6
  col_widths = [12, 30] + Array.new(categories.size) { 3 }
  sheet.column_widths(*col_widths)
end
