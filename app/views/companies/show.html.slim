- page_title_for @company
.page-header
  .buttons = delete_link @company
  h2 = title_for @company

= render 'form'

.row
  .col-md-3
    .panel.panel-default
      .panel-heading Kategorien
      ul.list-group
        - @company.categories.where(year: current_year).roots.uniq.sort_by(&:number).each do |cat|
          li.list-group-item = link_to cat.display_name, cat

  .col-md-9
    - attendees = @company.attendees.booked.joins(:seminar).where('seminars.year' => current_year)
    - count = attendees.count
    h4 #{count} #{Attendee.model_name.human count: count}

    .table-responsive
      table.standard-table.table-clickable.table-no-border.seminars
        thead
          tr
            th = Booking.human_attribute_name(:seminar)
            th = Seminar.human_attribute_name(:events)
            th = Booking.human_attribute_name(:attendees)
            th = Booking.human_attribute_name(:contact_email)
            /th
            /th
        tbody
          - attendees.order(created_at: :desc).each do |attendee|
            - seminar = attendee.seminar
            /- invoice = attendee.invoice
            tr data = {url: url_for(attendee)} class=('warning' if attendee.canceled?)
              td title=seminar.title
                = link_to seminar.number, seminar
              td = seminar.events_list.map { |date, _| ldate date }.join(', ')
              td = attendee.name
              td = attendee.contact_email
              /td
                - if invoice
                  = link_to "Rechnung #{invoice.number}", invoice
                /- else
                  = link_to 'Rechnung schreiben', new_invoice_path(booking_id: booking.id), class: 'btn btn-primary btn-xs'
              /td
                - if booking.canceled?
                  |  storniert
                - else
                  = link_to 'Stornieren', booking_cancel_url(booking), class: 'btn btn-danger btn-xs'
